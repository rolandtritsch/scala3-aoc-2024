rules = [
  CollectHeadOption,
  DisableSyntax,
  ExplicitResultTypes,
  LeakingImplicitClassVal,
  NoAutoTupling,
  NoValInForComprehension,
  OrganizeImports,
  // ProcedureSyntax,
  RedundantSyntax,
  RemoveUnused,
  
  AddExplicitImplicitTypes,
  AddLambdaParamParentheses,
  // CatsToValid,
  CirceCodec,
  CollectHeadOption,
  CollectHead,
  CompareSameValue,
  DirectoryAndPackageName,
  // DiscardSingleConfig,
  DiscardValue,
  DuplicateWildcardImport,
  EitherFold,
  EitherGetOrElse,
  EitherMap,
  EtaExpand,
  ExplicitImplicitTypes,
  ExtendsProductWithSerializable,
  FileNameConsistent,
  FilterNot,
  FilterSize,
  FinalObjectWarn,
  FlatMapCollect,
  FlatTraverse,
  // ForTupleMatch,
  GroupMap,
  ImplicitValueClass,
  IncorrectScaladocParam,
  InterpolationToString,
  InterpolationToStringWarn,
  IsEmptyNonEmpty,
  JavaURLConstructorsWarn,
  KeySet,
  KindProjector,
  LambdaParamParentheses,
  LazyZip,
  MapDistinctSize,
  MapFlattenFlatMap,
  MapSequenceTraverse,
  MapToForeach,
  // MatchParentheses,
  NamedParamOrder,
  NoElse,
  ObjectFinal,
  ObjectSelfType,
  OptionContains,
  OptionFilter,
  OptionForallExists,
  OptionGetOrElse,
  OptionGetWarn,
  OptionMapFlatMap,
  OptionMatchToRight,
  OptionOrElse,
  OptionWhenUnless,
  PartialFunctionCondOpt,
  RedundantCaseClassVal,
  RemoveEmptyObject,
  RemoveIf,
  RemovePureEff,
  RemoveSamePackageImport,
  RemoveStringInterpolation,
  RemoveUselessParamComments,
  RepeatedRewrite,
  ReplaceFill,
  ReplacePlaceholder,
  ReplaceSymbolLiterals,
  ReuseInstances,
  SameParamOverloading,
  Scala3ImportRewrite,
  Scala3ImportWarn,
  Scala3Placeholder,
  ScalaApp,
  ScalazEitherInfix,
  // SeparateEachFileConfig,
  SeparateEachFileRewrite,
  SeparateEachFileWarn,
  SimplifyForYield,
  SizeToLength,
  SlickFilter,
  StringFormatToInterpolation,
  SyntacticOrganizeImports,
  ThrowableToNonFatal,
  UnmooredDocComment,
  UnnecessaryCase,
  UnnecessaryMatch,
  UnnecessarySortRewrite,
  UnnecessarySort,
  UnusedConstructorParams,
  UnusedTypeParams,
  UselessParamCommentsWarn,
  // UsingParamAnonymousConstructor,
  // UsingParamAnonymous,
  WithFilter,
  // WithLeftWithRight,
]

OrganizeImports {
  groupedImports = Explode
  expandRelative = true
  removeUnused = false
  groups = [
    "re:javax?\\."
    "scala."
    "scala.meta."
    "*",
  ]
}
OrganizeImports.targetDialect = Scala3

ExplicitResultTypes.fetchScala3CompilerArtifactsOnVersionMismatch = true
